/* ComponentDomParser 0.0.1 | @license ISC */
!function(e,o){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=o(e):e.define&&"function"==typeof e.define&&e.define.amd?e.define("ComponentDomParser",[],function(){return o(e)}):e.ComponentDomParser=o(e)}(window,function(e){"use strict";var o=e.document,n=function(e){this._checkForRequiredConstants(e),this.dataSelector=e.dataSelector,this.componentIndex=e.componentIndex,this.componentDidMountCallback=e.componentDidMountCallback,this.fallbackHandlers=e.fallback||null,this._fallbackRules=null,this._fallbackRulesRegex=null,this._mountedElementsCache=[]};return n.prototype._checkForRequiredConstants=function(e){if(!e)throw new Error("ComponentDomParser Error: No option object was specified.");if(!e.dataSelector)throw new Error("ComponentDomParser Error: No dataSelector was specified.");if(!e.componentIndex)throw new Error("ComponentDomParser Error: No componentIndex was specified.");if(e.componentDidMountCallback&&"function"!=typeof e.componentDidMountCallback)throw new Error("ComponentDomParser Error: The componentDidMountCallback option must be a function.")},n.prototype.parse=function(e){e=e||o.body;var n=e.querySelectorAll("[data-"+this.dataSelector+"]"),t=Array.prototype.slice.call(n,0),a=this;return t.forEach(function(e){var o=e.dataset[a.dataSelector],n=a.componentIndex[o]||a._applyFallbackRules(e,o);n?a._mountedElementsCache.indexOf(e)<0&&a._mountComponent(e,n):console.info('ComponentDomParser Info: Component "'+o+'" is not present in the passed componentIndex:',a.componentIndex)}),this},n.prototype._mountComponent=function(e,o){var n=new o(e);return this._mountedElementsCache.push(e),this.componentDidMountCallback&&this.componentDidMountCallback(n),n},n.prototype._applyFallbackRules=function(e,o){var n=this;if(this.fallbackHandlers){var t=function(){var t=null,a=null;n._fallbackRules||(n._fallbackRules=Object.keys(n.fallbackHandlers)),n._fallbackRulesRegex||(n._fallbackRulesRegex=n._fallbackRules.map(function(e){return new RegExp("^"+e.replace(/[^\w\s]/g,"$&").replace(/\*/g,"\\w+")+"$")}));for(var r=0;(t=n._fallbackRules[r])&&(a=n._fallbackRulesRegex[r]);r++)if(o.match(a)){var l=n.fallbackHandlers[t],c=l(o,e);if(c)return{v:c}}}();if("object"==typeof t)return t.v}return!1},n});